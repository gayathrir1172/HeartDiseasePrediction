library(readr)
library(class)
library(gmodels)
library(e1071)
library(caret)
library(Hmisc)
library(party)

'/ Loading dataset and making a copy of it'
framingham <- read_csv("C:/Users/pc/Desktop/HeartDiseasePrediction/framingham.csv")
data <- read_csv("C:/Users/pc/Desktop/HeartDiseasePrediction/framingham.csv")

'/Replacing na values with mean'  

m <- round(mean(data$male, na.rm = TRUE))
data$male[is.na(data$male)] <- m
print(m)  

m <- round(mean(data$age, na.rm = TRUE))
data$age[is.na(data$age)] <- m
print(m)

m <- round(mean(data$education, na.rm = TRUE))
data$education[is.na(data$education)] <- m
print(m)

m <- round(mean(data$currentSmoker, na.rm = TRUE))
data$currentSmoker[is.na(data$currentSmoker)] <- m
print(m)

m <- round(mean(data$cigsPerDay, na.rm = TRUE))
data$cigsPerDay[is.na(data$cigsPerDay)] <- m
print(m)

m <- round(mean(data$BPMeds, na.rm = TRUE))
data$BPMeds[is.na(data$BPMeds)] <- m
print(m)

m <- round(mean(data$prevalentStroke, na.rm = TRUE))
data$prevalentStroke[is.na(data$prevalentStroke)] <- m
print(m)

m <- round(mean(data$prevalentHyp, na.rm = TRUE))
data$prevalentHyp[is.na(data$prevalentHyp)] <- m
print(m)

m <- round(mean(data$diabetes, na.rm = TRUE))
data$diabetes[is.na(data$diabetes)] <- m
print(m)

m <- round(mean(data$totChol, na.rm = TRUE))
data$totChol[is.na(data$totChol)] <- m
print(m)

m <- round(mean(data$sysBP, na.rm = TRUE))
data$sysBP[is.na(data$sysBP)] <- m
print(m)

m <- round(mean(data$diaBP, na.rm = TRUE))
data$diaBP[is.na(data$diaBP)] <- m
print(m)

m <- round(mean(data$BMI, na.rm = TRUE))
data$BMI[is.na(data$BMI)] <- m
print(m)

m <- round(mean(data$heartRate, na.rm = TRUE))
data$heartRate[is.na(data$heartRate)] <- m
print(m)

m <- round(mean(data$glucose, na.rm = TRUE))
data$glucose[is.na(data$glucose)] <- m
print(m)

m <- round(mean(data$TenYearCHD, na.rm = TRUE))
data$TenYearCHD[is.na(data$TenYearCHD)] <- m
print(m)

'/Splitting into train and test dataset'
train <- data[1:2756,]
test <- data[2757:4240,]

output.tree <- ctree(TenYearCHD~.,data=data)
'/plot(output.tree)'

pred <- predict(output.tree,test[-16])
print(pred)
print(table(pred,test$TenYearCHD))
print(confusionMatrix(table(pred,test$TenYearCHD)))
